{
  "openapi": "3.0.0",
  "info": {
    "title": "Rails API - max",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "/"
    }
  ],
  "paths": {
    "/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Log in by email.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestUser"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The User has been successfully logging in",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseUser"
                }
              }
            }
          },
          "401": {
            "description": "Invalid Email or Password."
          }
        }
      }
    },
    "/logout": {
      "delete": {
        "tags": [
          "Auth"
        ],
        "summary": "Logout.",
        "responses": {
          "204": {
            "description": "The session destroyed"
          }
        }
      }
    },
    "/signup": {
      "post": {
        "tags": [
          "Registration"
        ],
        "summary": "Creates a new user.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestUser"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The User has been successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseUser"
                }
              }
            }
          },
          "422": {
            "description": "Validation Failed"
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Index - gets a list of users",
        "description": "Returns the list of users. The first pagination page will be returned by defauls if no page parameres has been sent.\n",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "description": "pagination page number (optional)",
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOfUsers"
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Show - Gets a user by ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "User ID",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1,
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseUser"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RequestUser": {
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/RequestBody"
          }
        }
      },
      "RequestBody": {
        "required": [
          "email",
          "password"
        ],
        "properties": {
          "email": {
            "maxLength": 255,
            "type": "string",
            "example": "user1@example.com"
          },
          "password": {
            "maxLength": 255,
            "type": "string",
            "example": "password"
          }
        }
      },
      "ResponseUser": {
        "required": [
          "email"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "created_at": {
            "type": "string",
            "example": "2021-02-01T15:49:32.838Z"
          },
          "updated_at": {
            "type": "string",
            "example": "2021-02-01T15:49:32.838Z"
          },
          "email": {
            "maxLength": 255,
            "type": "string",
            "example": "user@example.com"
          }
        }
      },
      "NotFoundResponse": {
        "properties": {
          "message": {
            "type": "string",
            "example": "Not Found"
          },
          "error": {
            "type": "string",
            "example": "Couldn't find User with 'id'={id}"
          }
        }
      },
      "ListOfUsers": {
        "properties": {
          "data": {
            "type": "array",
            "example": [
              {
                "id": 1,
                "created_at": "2021-03-09T20:39:33.912Z",
                "updated_at": "2021-03-09T20:39:33.912Z",
                "email": "user1@example.com"
              },
              {
                "id": 2,
                "created_at": "2021-03-09T20:39:37.644Z",
                "updated_at": "2021-03-09T20:39:37.644Z",
                "email": "user2@example.com"
              }
            ]
          },
          "meta": {
            "type": "object",
            "example": {
              "current_page": 1,
              "next_page": null,
              "per_page": 25,
              "prev_page": null,
              "total_pages": 1,
              "total_count": 2
            }
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
